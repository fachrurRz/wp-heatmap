'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.trimPath = exports.ensurePath = exports.toPath = undefined;

var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _url = require('url');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var toPath = exports.toPath = function toPath(locale, defaultLocale) {
  if (!locale || !defaultLocale) {
    return '';
  }
  if ((typeof locale === 'undefined' ? 'undefined' : (0, _typeof3.default)(locale)) !== 'object' || !locale.hasOwnProperty('country') || !locale.hasOwnProperty('language')) {
    throw new Error('Expected locale to be an object with country and language properties.');
  }
  if (typeof defaultLocale !== 'string' || defaultLocale.length !== 5 || defaultLocale[2] !== '-') {
    throw new Error('Expected defaultLocale to be a locale string.');
  }
  var localeArr = [];

  var _defaultLocale$split = defaultLocale.split('-'),
      _defaultLocale$split2 = (0, _slicedToArray3.default)(_defaultLocale$split, 2),
      defaultLanguage = _defaultLocale$split2[0],
      defaultCountry = _defaultLocale$split2[1];

  var country = locale.country,
      language = locale.language;

  if (language !== defaultLanguage) {
    localeArr.push(language);
  }
  if (country !== defaultCountry) {
    localeArr.push(country);
  }
  if (localeArr.length > 0) {
    return '/' + localeArr.join('-');
  }
  return '';
};

var ensurePath = exports.ensurePath = function ensurePath(url, locale, defaultLocale) {
  var localePrefix = toPath(locale, defaultLocale);
  if (localePrefix === '') {
    return url;
  }

  var _parseUrl = (0, _url.parse)(url),
      pathname = _parseUrl.pathname;

  var _pathname$substr$spli = pathname.substr(1).split('/'),
      _pathname$substr$spli2 = (0, _slicedToArray3.default)(_pathname$substr$spli, 1),
      localeSegment = _pathname$substr$spli2[0];

  if (localeSegment) {
    var _defaultLocale$split3 = defaultLocale.split('-'),
        _defaultLocale$split4 = (0, _slicedToArray3.default)(_defaultLocale$split3, 2),
        defaultCountry = _defaultLocale$split4[1];

    var _localeSegment$split = localeSegment.split('-'),
        _localeSegment$split2 = (0, _slicedToArray3.default)(_localeSegment$split, 2),
        language = _localeSegment$split2[0],
        _localeSegment$split3 = _localeSegment$split2[1],
        country = _localeSegment$split3 === undefined ? defaultCountry : _localeSegment$split3;

    if (language === locale.language && country === locale.country) {
      return url;
    }
  }
  return localePrefix + url;
};

var trimPath = exports.trimPath = function trimPath(url, defaultLocale, siteLocales) {
  if (!defaultLocale || !siteLocales) {
    return url;
  }

  var _parseUrl2 = (0, _url.parse)(url),
      pathname = _parseUrl2.pathname;

  var _pathname$substr$spli3 = pathname.substr(1).split('/'),
      _pathname$substr$spli4 = (0, _slicedToArray3.default)(_pathname$substr$spli3, 1),
      localeSegment = _pathname$substr$spli4[0];

  if (localeSegment) {
    var _defaultLocale$split5 = defaultLocale.split('-'),
        _defaultLocale$split6 = (0, _slicedToArray3.default)(_defaultLocale$split5, 2),
        defaultCountry = _defaultLocale$split6[1];

    var _localeSegment$split4 = localeSegment.split('-'),
        _localeSegment$split5 = (0, _slicedToArray3.default)(_localeSegment$split4, 2),
        language = _localeSegment$split5[0],
        _localeSegment$split6 = _localeSegment$split5[1],
        country = _localeSegment$split6 === undefined ? defaultCountry : _localeSegment$split6;

    if (siteLocales.indexOf(language + '-' + country) !== -1) {
      return url.substr(localeSegment.length + 1);
    }
  }
  return url;
};